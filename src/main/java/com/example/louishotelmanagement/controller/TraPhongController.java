package com.example.louishotelmanagement.controller;

import com.example.louishotelmanagement.dao.*;
import com.example.louishotelmanagement.model.*;
import com.example.louishotelmanagement.util.ThongBaoUtil;
import javafx.event.ActionEvent;
import javafx.fxml.FXMLLoader;
import javafx.fxml.Initializable;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.*;
import javafx.stage.Modality;
import javafx.stage.Stage;


import java.io.IOException;
import java.net.URL;
import java.sql.SQLException;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;
import java.util.ResourceBundle;

public class TraPhongController implements Initializable,Refreshable{

    public Button btnCheck;
    public DatePicker ngayDi;
    public ComboBox dsPhong;
    public ComboBox dsKhachHang;
    public Button btnTraPhong;
    public KhachHangDAO khDao;
    public PhongDAO phDao;
    public CTHoaDonPhongDAO cthdpDao;
    public PhieuDatPhongDAO phieuDatPhongDAO;
    public DatePicker ngayTraPhong;
    public TextField hoTen;
    public TextField maPhieuThue;
    public DatePicker ngayDen;
    public TextField soLuongPhong;
    public Label lblCheDo;
    public Button btnXemChiTiet;
    public ComboBox dsPhieu;
    private ArrayList<String> dsMaKH = new ArrayList<>();
    private ArrayList<PhieuDatPhong> dspdp;
    private HoaDonDAO hdDao;
    private List<CTHoaDonPhong> listCTHoaDonPhong = new ArrayList<>();
    private ContentSwitcher switcher;
    public void setContentSwitcher(ContentSwitcher switcher) {
        this.switcher = switcher;
    }

    @Override
    public void initialize(URL url, ResourceBundle resourceBundle) {
        khDao = new KhachHangDAO();
        phDao = new PhongDAO();
        cthdpDao = new CTHoaDonPhongDAO();
        phieuDatPhongDAO = new PhieuDatPhongDAO();
        hdDao = new HoaDonDAO();
        btnXemChiTiet.setDisable(true);
        try{
            laydsKhachHang();
            laydsPhieuTheoKhachHang();
            laydsPhongTheoPhieu();
            dsKhachHang.getSelectionModel().selectedItemProperty().addListener((observable, oldValue, newValue) -> {
                if(newValue!=null){
                    try {
                        laydsPhieuTheoKhachHang();
                    } catch (SQLException e) {
                        throw new RuntimeException(e);
                    }
                }
            });
            dsPhieu.getSelectionModel().selectedItemProperty().addListener((observable, oldValue, newValue) -> {
                if(newValue!=null){
                    try {
                        laydsPhongTheoPhieu();
                    } catch (SQLException e) {
                        throw new RuntimeException(e);
                    }
                }
            });
        } catch (SQLException e) {
            throw new RuntimeException(e);
        }
    }
    public void laydsKhachHang() throws  SQLException{
        ArrayList<KhachHang> khs = khDao.layDSKhachHang();
        for(KhachHang khachHang : khs) {
            dsKhachHang.getItems().add(khachHang.getHoTen());
            dsMaKH.add(khachHang.getMaKH());
        }
        dsKhachHang.getSelectionModel().selectFirst();
    }
    public void laydsPhieuTheoKhachHang() throws SQLException {
        dsPhieu.getItems().clear();
        ArrayList<PhieuDatPhong> listpdp = phieuDatPhongDAO.layDSPhieuDatPhongTheoKhachHang(dsMaKH.get(dsKhachHang.getSelectionModel().getSelectedIndex()));
        for(PhieuDatPhong phieuDatPhong : listpdp) {
            dsPhieu.getItems().add(phieuDatPhong.getMaPhieu());
        }
        dsPhieu.getSelectionModel().selectFirst();
    }
    public void laydsPhongTheoPhieu() throws SQLException {
        dsPhong.getItems().clear();
        ArrayList<CTHoaDonPhong> ctHoaDonPhongs = cthdpDao.getCTHoaDonPhongTheoMaPhieu(dsPhieu.getSelectionModel().getSelectedItem().toString());
        for(CTHoaDonPhong ctHoaDonPhong : ctHoaDonPhongs) {
            dsPhong.getItems().add(ctHoaDonPhong.getMaPhong());
        }
        dsPhong.getSelectionModel().selectFirst();
    }
    public void handleCheck(javafx.event.ActionEvent actionEvent) throws Exception {
        boolean IsCheck = false;
        if(dsPhieu.getSelectionModel().getSelectedItem()!=null){
            PhieuDatPhong phieuDatPhong = phieuDatPhongDAO.layPhieuDatPhongTheoMa(dsPhieu.getSelectionModel().getSelectedItem().toString());
            if(phieuDatPhong!=null){
                KhachHang khachHang = khDao.layKhachHangTheoMa(phieuDatPhong.getMaKH());
                hoTen.setText(khachHang.getHoTen());
                maPhieuThue.setText(phieuDatPhong.getMaPhieu());
                ngayDen.setValue(phieuDatPhong.getNgayDen());
                ArrayList<CTHoaDonPhong> listCTHDPTheoPhieu = cthdpDao.getCTHoaDonPhongTheoMaPhieu(phieuDatPhong.getMaPhieu());
                soLuongPhong.setText(String.valueOf(listCTHDPTheoPhieu.size()));
                IsCheck = true;
            }else{
                ThongBaoUtil.hienThiLoi("L·ªói ki·ªÉm tra","Kh√¥ng t√¨m th·∫•y b·∫•t k√¨ phi·∫øu ƒë·∫∑t ph√≤ng n√†o");
                refreshData();
            }
        }else{
            ThongBaoUtil.hienThiLoi("L·ªói ki·ªÉm tra","Vui l√≤ng ch·ªçn phi·∫øu mu·ªën ki·ªÉm tra");
            refreshData();
        }
        btnXemChiTiet.setDisable(!IsCheck);
    }

    // Trong com.example.louishotelmanagement.controller.TraPhongController.java

    // Trong com.example.louishotelmanagement.controller.TraPhongController.java

    public void handleTraPhong(ActionEvent actionEvent) throws Exception {

        // 0. Ki·ªÉm tra xem ƒë√£ c√≥ th√¥ng tin phi·∫øu ƒë∆∞·ª£c hi·ªÉn th·ªã ch∆∞a
        String maPhieu = maPhieuThue.getText();
        if (maPhieu == null || maPhieu.isEmpty()) {
            ThongBaoUtil.hienThiLoi("L·ªói tr·∫£ ph√≤ng", "Vui l√≤ng Ki·ªÉm tra phi·∫øu ƒë·∫∑t ph√≤ng tr∆∞·ªõc khi Tr·∫£ ph√≤ng.");
            return;
        }

        // 1. L·∫•y danh s√°ch chi ti·∫øt h√≥a ƒë∆°n ph√≤ng theo m√£ phi·∫øu
        ArrayList<CTHoaDonPhong> listCTHDP = cthdpDao.getCTHoaDonPhongTheoMaPhieu(maPhieu);

        // 2. Ki·ªÉm tra danh s√°ch c√≥ r·ªóng kh√¥ng
        if (listCTHDP.isEmpty()) {
            ThongBaoUtil.hienThiLoi("L·ªói tr·∫£ ph√≤ng", "Kh√¥ng t√¨m th·∫•y b·∫•t k√¨ chi ti·∫øt h√≥a ƒë∆°n ph√≤ng n√†o li√™n k·∫øt.");
            return;
        }

        // 3. L·∫•y Chi ti·∫øt ƒë·∫ßu ti√™n ƒë·ªÉ t√¨m MaHD
        CTHoaDonPhong ctHoaDonPhong = listCTHDP.getFirst();

        // 4. Ki·ªÉm tra v√† x·ª≠ l√Ω H√≥a ƒë∆°n
        if (ctHoaDonPhong != null) {
            HoaDon hd = hdDao.timHoaDonTheoMa(ctHoaDonPhong.getMaHD());

            if (hd != null) {
                if (hd.getTrangThai().equals(TrangThaiHoaDon.CHUA_THANH_TOAN)) {

                    // üí° TR·∫†NG TH√ÅI 1: CH∆ØA THANH TO√ÅN -> CHUY·ªÇN M√ÄN H√åNH THANH TO√ÅN (KH√îNG TRUY·ªÄN D·ªÆ LI·ªÜU)
                    if (switcher != null) {
                        switcher.switchContent("/com/example/louishotelmanagement/fxml/thanh-toan-view.fxml");
                    } else {
                        ThongBaoUtil.hienThiLoi("L·ªói h·ªá th·ªëng", "Kh√¥ng t√¨m th·∫•y b·ªô chuy·ªÉn ƒë·ªïi n·ªôi dung (switcher).");
                    }

                } else {

                    // üí° TR·∫†NG TH√ÅI 2: ƒê√É THANH TO√ÅN -> HO√ÄN T·∫§T V√Ä D·ªåN PH√íNG
                    phieuDatPhongDAO.capNhatTrangThaiPhieuDatPhong(maPhieu, TrangThaiPhieuDatPhong.HOAN_THANH.toString());

                    // C·∫≠p nh·∫≠t tr·∫°ng th√°i t·ª´ng ph√≤ng th√†nh TR·ªêNG
                    for (CTHoaDonPhong ctHd : listCTHDP) {
                        phDao.capNhatTrangThaiPhong(ctHd.getMaPhong(), TrangThaiPhong.TRONG.toString());
                    }

                    ThongBaoUtil.hienThiThongBao("Th√†nh c√¥ng", "Tr·∫£ ph√≤ng v√† d·ªçn ph√≤ng th√†nh c√¥ng!");
                    refreshData();
                }
            } else {
                ThongBaoUtil.hienThiLoi("L·ªói tr·∫£ ph√≤ng", "Kh√¥ng t√¨m th·∫•y H√≥a ƒë∆°n ph√≤ng c√≥ m√£: " + ctHoaDonPhong.getMaHD());
            }
        }
    }


    public void handleXemChiTiet(ActionEvent actionEvent) throws SQLException {
// 1. L·∫•y phi·∫øu ƒë·∫∑t ph√≤ng ƒë∆∞·ª£c ch·ªçn
        PhieuDatPhong selectedPhieu = phieuDatPhongDAO.layPhieuDatPhongTheoMa(dsPhieu.getSelectionModel().getSelectedItem().toString());

        if (selectedPhieu == null) {
            ThongBaoUtil.hienThiLoi("L·ªói", "Vui l√≤ng ch·ªçn m·ªôt phi·∫øu ƒë·∫∑t ph√≤ng ƒë·ªÉ xem chi ti·∫øt.");
            return;
        }

        try {
            // 2. L·∫•y danh s√°ch chi ti·∫øt ph√≤ng (CTHoaDonPhong) t·ª´ DAO
            ArrayList<CTHoaDonPhong> dsCTP = cthdpDao.getCTHoaDonPhongTheoMaPhieu(selectedPhieu.getMaPhieu());

            if (dsCTP.isEmpty()) {
                ThongBaoUtil.hienThiLoi("Th√¥ng b√°o", "Phi·∫øu n√†y kh√¥ng ch·ª©a th√¥ng tin chi ti·∫øt ph√≤ng n√†o.");
                return;
            }

            // 3. Load FXML c·ªßa m√†n h√¨nh chi ti·∫øt
            // ƒê·∫£m b·∫£o ƒë∆∞·ªùng d·∫´n FXML l√† ch√≠nh x√°c theo c·∫•u tr√∫c d·ª± √°n c·ªßa b·∫°n!
            FXMLLoader loader = new FXMLLoader(getClass().getResource("/com/example/louishotelmanagement/fxml/ChiTietPhongTrongPhieuView.fxml"));
            Parent root = loader.load();

            // 4. Truy c·∫≠p Controller c·ªßa m√†n h√¨nh m·ªõi
            ChiTietPhongTrongPhieuController chiTietController = loader.getController();

            // 5. Truy·ªÅn d·ªØ li·ªáu sang Controller m·ªõi
            // H√†m setChiTietData s·∫Ω l·∫•y MaPhieu v√† danh s√°ch CTHoaDonPhong ƒë·ªÉ hi·ªÉn th·ªã
            chiTietController.setChiTietData(selectedPhieu.getMaPhieu(), dsCTP);

            // 6. T·∫°o Stage v√† hi·ªÉn th·ªã
            Stage stage = new Stage();
            stage.setTitle("Chi Ti·∫øt Ph√≤ng ƒê·∫∑t - Phi·∫øu " + selectedPhieu.getMaPhieu());
            stage.setScene(new Scene(root));
            stage.initModality(Modality.APPLICATION_MODAL); // Ch·∫∑n t∆∞∆°ng t√°c v·ªõi c·ª≠a s·ªï cha
            stage.showAndWait(); // Hi·ªÉn th·ªã v√† ch·ªù ng∆∞·ªùi d√πng ƒë√≥ng c·ª≠a s·ªï

        } catch (IOException e) {
            // L·ªói khi kh√¥ng t√¨m th·∫•y ho·∫∑c kh√¥ng load ƒë∆∞·ª£c file FXML
            ThongBaoUtil.hienThiLoi("L·ªói m·ªü m√†n h√¨nh", "Kh√¥ng t√¨m th·∫•y file FXML Chi Ti·∫øt Ph√≤ng ho·∫∑c l·ªói t·∫£i: " + e.getMessage());
            System.err.println("L·ªói FXML: ");
            e.printStackTrace();
        } catch (SQLException e) {
            // L·ªói x·∫£y ra khi truy v·∫•n DB trong qu√° tr√¨nh l·∫•y chi ti·∫øt ph√≤ng
            ThongBaoUtil.hienThiLoi("L·ªói d·ªØ li·ªáu", "L·ªói khi truy xu·∫•t chi ti·∫øt ph√≤ng: " + e.getMessage());
            System.err.println("L·ªói SQL: ");
            e.printStackTrace();
        }
    }

    @Override
    public void refreshData() throws SQLException, Exception {
        laydsKhachHang();
        laydsPhieuTheoKhachHang();
        laydsPhongTheoPhieu();
        ngayTraPhong.setValue(LocalDate.now());
        hoTen.setText(null);
        maPhieuThue.setText(null);
        ngayDen.setValue(null);
        soLuongPhong.setText(null);
    }
}
